# -*- coding: utf-8 -*-
"""otp_verification_system.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CaqCUVQ6PgsZvj1cPFntF8MPvJ_TEvCt
"""

# Commented out IPython magic to ensure Python compatibility.
# # install validate_email module to ensure email format
# # and the existence of the domain
# %%capture
# !pip install validate_email

import random
from validate_email import validate_email
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

# function to generate 6-digit random otp
def generate_otp():
  generated_otp = ""  # Reset the global variable
  for i in range(6):
    generated_otp += str(random.randint(0,9))
  return generated_otp

def is_valid_email(email):
    # Check if the entered email address is valid.
    return validate_email(email)

# function to send otp
def send_otp(generated_otp, email):
    # smtp server configuration
    server_address = 'smtp.gmail.com'
    sender_email = 'bhawana.smtpserver@gmail.com'
    sender_password = 'tnze czik murl tjtj'
    port_number = 587
    receiver_email = email

    # message container
    message = MIMEMultipart()
    message['From'] = sender_email
    message['To'] = receiver_email
    message['Subject'] = 'Your OTP for verification'

    # The body of the message
    text = f'Your OTP is: {generated_otp}'

    # Turn these into plain MIMEText objects
    part1 = MIMEText(text, 'plain')

    # Add plain-text part to MIMEMultipart message
    message.attach(part1)

    # Create SMTP session
    server = smtplib.SMTP(server_address, port_number)
    server.starttls()  # Secure the connection
    server.login(sender_email, sender_password)  # Login with credentials

    # Send email
    server.sendmail(sender_email, receiver_email, message.as_string())
    print(f"OTP sent successfully to {receiver_email}")

    # Clean up
    server.quit()

def prompt_for_otp():
    # Prompt the user to enter the OTP received in their email.
    return input("Please enter the OTP you received in your email: ")

def verify_otp(generated_otp, entered_otp):
    # Verify if the entered OTP matches the generated OTP.
    return generated_otp == entered_otp

def main():
    while True:
        user_email = input("Enter your email address: ")
        if is_valid_email(user_email):
            break
        else:
            print("Invalid email address or domain does not exist. Please try again.")
    generated_otp = generate_otp()
    send_otp(generated_otp, user_email)

    attempts = 3
    while attempts > 0:
        entered_otp = prompt_for_otp()
        if verify_otp(generated_otp, entered_otp):
            print("OTP verified successfully!")
            return
        else:
            attempts -= 1
            print(f"Incorrect OTP. You have {attempts} attempts left.")

    print("Failed to verify OTP. Please try again later.")

if __name__ == "__main__":
    main()